{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/getColor.js","webpack://exports/external \"sketch\""],"names":["sketch","require","context","selection","console","log","forEach","textLayer","hexColor","textColor","NSColorWithColorSpace","nil","hexValue","UI","message"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA,IAAIA,MAAM,GAAGC,mBAAO,CAAC,sBAAD,CAApB,C,CACA;AACA;AACA;AACA;AACA;AAEA;;;AAEe,yEAACC,OAAD,EAAa;AAC1B,MAAIC,SAAS,GAAGD,OAAO,CAACC,SAAxB;AACAC,SAAO,CAACC,GAAR,CAAYF,SAAZ;AACAA,WAAS,CAACG,OAAV,CAAkB,UAAAC,SAAS,EAAI;AAC7B,QAAIC,QAAQ,GAAGD,SAAS,CAACE,SAAV,GAAsBC,qBAAtB,CAA4CC,GAA5C,EAAiDC,QAAjD,EAAf;AACAZ,UAAM,CAACa,EAAP,CAAUC,OAAV,sCAAgDN,QAAhD;AACD,GAHD;AAID,CAPD,E,CAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA,yB;;;;;;;;;;;AC1GA,mC","file":"getColor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/getColor.js\");\n","//import sketch from 'sketch'\nvar sketch = require('sketch')\n//var sketch = require('sketch');\n// documentation: https://developer.sketchapp.com/reference/api/\n// export default function() {\n//   sketch.UI.message(\"It's alive ðŸ™Œ\")\n// }\n\n//const getSelectedDocument = require('sketch/dom').getSelectedDocument;\n\nexport default (context) => {\n  var selection = context.selection;\n  console.log(selection);\n  selection.forEach(textLayer => {\n    var hexColor = textLayer.textColor().NSColorWithColorSpace(nil).hexValue();\n    sketch.UI.message(`The color of this layer is ${hexColor}`)\n  })\n}\n\n\n\n// var Document = sketch.Document\n// var page = Document.SelectedPage\n//console.log(page);\n\n// export default function(context) {\n//   const selectedLayers = context.selection\n//   const selectedCount = selectedLayers.length\n//   const selectedName = selectedLayers.forEach(function(item){ console.log(item) })\n//\n//   if (selectedCount === 0) {\n//     context.document.showMessage('No layers are selected.')\n//   } else {\n//     context.document.showMessage(`${selectedCount} layers selected. My name is: ${selectedCount}`)\n//   }\n//\n// }\n\n// export default function(context) {\n//   // we use this to get hold of native sketch doc\n//\n//   //const page = document.SelectedPage\n//   const selectedLayers = context.selection\n//   const selectedCount = selectedLayers.length\n//   const layerName = selectedLayers.forEach(function(item){ console.log(item.name())  })\n//   context.document.showMessage(`${layerName}`)\n// }\n\n// export default function(context) {\n//   // We are passed a context variable when we're run.\n//   // We use this to get hold of the native Sketch document and wrap it.\n//   const document = sketch.fromNative(context.document)\n//\n//   // Next we want to extract the selected page of the selected (front-most) document\n//   const page = document.selectedPage\n//\n//   // Now let's create a new text layer, and a traditional value...\n//   const layer = new sketch.Text({\n//     parent: page,\n//     alignment: sketch.Text.Alignment.center,\n//     text: 'Hello World',\n//   })\n//\n//   // ...resize it so that the text just fits...\n//   layer.adjustToFit()\n//\n//   // Finally, lets center the view on our new layer\n//   // so that we can see where it is.\n//   document.centerOnLayer(layer)\n// }\n\n// export default (context) => {\n//   //const doc = sketch.getSelectedDocument()\n//   const selectedLayers = context.selection\n//   console.log(selectedLayers)\n//   var items = selectedLayers.forEach(function(item){\n//       context.document.showMessage(`${item.name()}`)\n//   })\n// }\n\n// var openPanel = NSOpenPanel.openPanel()\n// openPanel.setCanChooseDirectories(false)\n// openPanel.setCanChooseFiles(true)\n// openPanel.setCanCreateDirectories(true)\n// openPanel.setDirectoryURL(NSURL.fileURLWithPath('~/Documents/'))\n//\n// openPanel.setTitle('Choose a file')\n// openPanel.setPrompt('Choose')\n// openPanel.runModal()\n//\n// var newWindow = NSWindow.window()\n\n// var document = sketch.getSelectedDocument()\n// var page = document.selectedPage\n//\n// var artboards = page.layers.filter(function (layer) {\n//   return layer.type === \"Artboard\"\n// })\n\n// var page = context.document.addBlankPage();\n// page.setName('Whatever you wanna call it');\n\n// var document = sketch.getSelectedDocument()\n//var page = document.selectedPage\n// page.layer.duplicate()\n// const selectedLayers = context.selection\n// console.log(document);\n","module.exports = require(\"sketch\");"],"sourceRoot":""}